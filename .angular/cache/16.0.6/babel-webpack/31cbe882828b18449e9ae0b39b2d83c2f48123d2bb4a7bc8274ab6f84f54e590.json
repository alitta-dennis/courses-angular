{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass CourseEditGuard {\n  canDeactivate(component) {\n    if (component.courseForm.dirty) {\n      const courseName = component.courseForm.get('courseName')?.value || 'New Course';\n      return confirm(`Navigate away and lose all changes to ${courseName}?`);\n    }\n    return true;\n  }\n}\n_class = CourseEditGuard;\n_class.ɵfac = function CourseEditGuard_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { CourseEditGuard };","map":{"version":3,"names":["CourseEditGuard","canDeactivate","component","courseForm","dirty","courseName","get","value","confirm","factory","ɵfac","providedIn"],"sources":["C:\\Users\\LENOVO\\P10\\demo\\src\\app\\courses\\course-edit.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CourseEditComponent } from './course-edit.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseEditGuard implements CanDeactivate<CourseEditComponent> {\r\n  canDeactivate(component: CourseEditComponent): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (component.courseForm.dirty) {\r\n      const courseName = component.courseForm.get('courseName')?.value || 'New Course';\r\n      return confirm(`Navigate away and lose all changes to ${courseName}?`);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":";;AAMA,MAGaA,eAAe;EAC1BC,aAAaA,CAACC,SAA8B;IAC1C,IAAIA,SAAS,CAACC,UAAU,CAACC,KAAK,EAAE;MAC9B,MAAMC,UAAU,GAAGH,SAAS,CAACC,UAAU,CAACG,GAAG,CAAC,YAAY,CAAC,EAAEC,KAAK,IAAI,YAAY;MAChF,OAAOC,OAAO,CAAC,yCAAyCH,UAAU,GAAG,CAAC;;IAExE,OAAO,IAAI;EACb;;SAPWL,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAS,OAAA,EAAfT,MAAe,CAAAU,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPX,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}