{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../auth.service\";\nclass LoginPageComponent {\n  constructor(formbuilder, http, router, authService) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    this.loginForm = this.formbuilder.group({\n      email: [''],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  login() {\n    console.log(this.loginForm.value);\n    const data = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password\n    };\n    // this.http.post<any>(\"http://localhost:3000/signupUsersList\", this.loginForm.value)\n    this.http.post(\"http://127.0.0.1:8000/api/login\", data).subscribe(response => {\n      const jwt = response.token;\n      const helper = new JwtHelperService();\n      const payload = helper.decodeToken(jwt);\n      //const fname = user.fname;\n      //const message=response.message;\n      this.authService.setToken(jwt);\n      alert(`Welcome`);\n      this.authService.login();\n      console.log(\"logged in\");\n      const isAdmin = payload.roles.includes('ROLE_ADMIN');\n      this.authService.setAdmin(isAdmin);\n      this.loginForm.reset();\n      this.router.navigate([\"courses\"]);\n    }, error => {\n      alert(\"Something went wrong\");\n    });\n  }\n  logout() {\n    // Call the logout method from AuthService\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-page\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"routerLink\", \"/signUp\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\");\n      i0.ɵɵtext(13, \"Create New Account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵtext(15, \"SignUp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"button\", 6);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPageComponent };","map":{"version":3,"names":["Validators","JwtHelperService","LoginPageComponent","constructor","formbuilder","http","router","authService","loginForm","group","email","password","required","ngOnInit","login","console","log","value","data","post","subscribe","response","jwt","token","helper","payload","decodeToken","setToken","alert","isAdmin","roles","includes","setAdmin","reset","navigate","error","logout","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","i4","AuthService","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\LENOVO\\P10\\demo\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\LENOVO\\P10\\demo\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit{\r\n  public loginForm: FormGroup\r\n\r\n  constructor(private formbuilder: FormBuilder,\r\n              private http: HttpClient, \r\n              private router: Router, \r\n              private authService: AuthService) {\r\n                this.loginForm = this.formbuilder.group({\r\n                  email: [''],\r\n                  password: ['', Validators.required]\r\n                })\r\n               }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n  \r\n\r\n  login() {\r\n    console.log(this.loginForm.value)\r\n    const data={\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password\r\n    };\r\n    // this.http.post<any>(\"http://localhost:3000/signupUsersList\", this.loginForm.value)\r\n    this.http.post<any>(\"http://127.0.0.1:8000/api/login\",data)\r\n      .subscribe((response)=>{\r\n            \r\n            const jwt=response.token;\r\n            const helper=new JwtHelperService();\r\n            const payload=helper.decodeToken(jwt);\r\n            //const fname = user.fname;\r\n            //const message=response.message;\r\n            \r\n            this.authService.setToken(jwt);\r\n            alert(`Welcome`);\r\n            this.authService.login();\r\n            console.log(\"logged in\");\r\n\r\n            const isAdmin=payload.roles.includes('ROLE_ADMIN');\r\n            this.authService.setAdmin(isAdmin);\r\n            this.loginForm.reset();\r\n            this.router.navigate([\"courses\"]);\r\n          \r\n        },\r\n        (error) => {\r\n          alert(\"Something went wrong\");\r\n        }\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    // Call the logout method from AuthService\r\n    \r\n  }\r\n  \r\n}\r\n","\r\n<!-- <div>\r\n    <h1>Hi Welcome Back</h1>\r\n     <h3>Login Here</h3>\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n        <div>\r\n          <label for=\"email\">Email</label>\r\n          <input  formControlName=\"email\" required type=\"text\">\r\n          <label for=\"password\">Password</label>\r\n          <input formControlName=\"email\" type=\"password\" required>\r\n        </div>\r\n        <button>Submit</button>\r\n        <span>Don't have an account? \r\n        <a routerLink=\"/signUp\">signUp</a></span>\r\n      </form>\r\n  </div>\r\n -->\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"form-box\">\r\n        <h3>Login</h3>\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\r\n            \r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Password\"/>\r\n        </div>\r\n\r\n        <span>Create New Account </span>\r\n        <a routerLink=\"/signUp\">SignUp</a>\r\n        <br/>\r\n        <button type=\"submit\" class=\"btn btn-success\">Login</button>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}