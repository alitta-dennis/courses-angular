{"ast":null,"code":"var _class;\nimport { ElementRef } from '@angular/core';\nimport { Validators, FormControlName } from '@angular/forms';\nimport { fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NumberValidators } from '../shared/number.validator';\nimport { GenericValidator } from '../shared/generic-validator';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./course.service\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/common\";\nfunction CourseEditComponent_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", category_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2.name);\n  }\n}\nfunction CourseEditComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.errorMessage, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/courses\"];\n};\nclass CourseEditComponent {\n  constructor(fb, route, router, courseService, authService, http) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.courseService = courseService;\n    this.authService = authService;\n    this.http = http;\n    this.pageTitle = 'Course Edit';\n    this.errorMessage = '';\n    this.selectedImageFile = null;\n    this.nameSelected = null;\n    // Use with the generic validation message class\n    this.displayMessage = {};\n    this.idSelected = null;\n    this.categories = [];\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      courseName: {\n        required: 'Course name is required.',\n        minlength: 'Course name must be at least three characters.',\n        maxlength: 'Course name cannot exceed 50 characters.'\n      },\n      courseCode: {\n        required: 'Course code is required.'\n      },\n      // startDate:{ required: 'Start Date is required.'},\n      // price:{ required: 'Price is required.'},\n      starRating: {\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\n      }\n      //  imageUrl: {\n      //   range: 'Rate the product between 1 (lowest) and 5 (highest).'\n      //     },\n    };\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n  ngOnInit() {\n    this.fetchCategories();\n    this.courseForm = this.fb.group({\n      courseName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      courseCode: ['', Validators.required],\n      startDate: [''],\n      price: '',\n      starRating: ['', NumberValidators.range(1, 5)],\n      imageUrl: [''],\n      categoryId: [null]\n      // tags: this.fb.array([]),\n      // description: ''\n    });\n    // Read the product Id from the route parameter\n    this.sub = this.route.paramMap.subscribe(params => {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      this.getCourse(id);\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  ngAfterViewInit() {\n    // Watch for the blur event from any input element on the form.\n    // This is required because the valueChanges does not provide notification on blur\n    const controlBlurs = this.formInputElements.map(formControl => fromEvent(formControl.nativeElement, 'blur'));\n    // Merge the blur event observable with the valueChanges observable\n    // so we only need to subscribe once.\n    merge(this.courseForm.valueChanges, ...controlBlurs).pipe(debounceTime(800)).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.courseForm);\n    });\n  }\n  getCourse(id) {\n    console.log(id);\n    this.courseService.getCourse(id).subscribe({\n      next: Course => this.displayCourse(Course),\n      error: err => this.errorMessage = err\n    });\n  }\n  displayCourse(Course) {\n    if (this.courseForm) {\n      this.courseForm.reset();\n    }\n    this.Course = Course;\n    if (this.Course.id === 0) {\n      this.pageTitle = 'Add Course';\n    } else {\n      this.pageTitle = `Edit Course: ${this.Course.courseName}`;\n    }\n    // Update the data on the form\n    this.courseForm.patchValue({\n      courseName: this.Course.courseName,\n      courseCode: this.Course.courseCode,\n      starRating: this.Course.starRating,\n      startDate: this.Course.startDate,\n      price: this.Course.price,\n      category: this.Course.category,\n      imageUrl: this.Course.imageUrl\n    });\n  }\n  deleteCourse() {\n    if (this.Course.id === 0) {\n      // Don't delete, it was never saved.\n      this.onSaveComplete();\n    } else if (this.Course.id) {\n      if (confirm(`Are you sure you want to delete the course, ${this.Course.courseName}?`)) {\n        this.courseService.deleteCourse(this.Course.id).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      }\n    }\n  }\n  // saveCourse(): void {\n  //   if (this.courseForm.valid) {\n  //     if (this.courseForm.dirty) {\n  //       const p = { ...this.Course, ...this.courseForm.value };\n  //       if (p.id === 0) {\n  //         this.courseService.createCourses(p)\n  //           .subscribe({\n  //             next: x => {\n  //               console.log(x);\n  //               return this.onSaveComplete();\n  //             },\n  //             error: err => this.errorMessage = err\n  //           });\n  //       } else {\n  //         this.courseService.updateCourse(p)\n  //           .subscribe({\n  //             next: () => this.onSaveComplete(),\n  //             error: err => this.errorMessage = err\n  //           });\n  //       }\n  //     } else {\n  //       this.onSaveComplete();\n  //     }\n  //   } else {\n  //     this.errorMessage = 'Please correct the validation errors.';\n  //   }\n  // }\n  onImageChange(event) {\n    const file = event.target.files[0];\n    this.selectedImageFile = file;\n  }\n  fetchCategories() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.http.get('http://127.0.0.1:8000/api/category', {\n      headers\n    }).subscribe(data => {\n      this.categories = data;\n    });\n  }\n  onChange(event) {\n    const idSelected = event.target.value;\n    this.nameSelected = this.categories.find(category => category.id === idSelected)?.name;\n  }\n  saveCourse() {\n    if (this.courseForm.valid) {\n      if (this.courseForm.dirty) {\n        const courseData = {\n          ...this.Course,\n          ...this.courseForm.value\n        };\n        this.idSelected = courseData.categoryId;\n        this.nameSelected = this.categories.find(category => category.id === this.idSelected)?.name;\n        console.log('Selected Image File:', this.selectedImageFile);\n        console.log('Selected Image name:', this.selectedImageFile?.name);\n        const formData = new FormData();\n        formData.append('courseName', courseData.courseName);\n        formData.append('courseCode', courseData.courseCode);\n        formData.append('startDate', courseData.startDate);\n        formData.append('price', courseData.price);\n        formData.append('starRating', courseData.starRating);\n        if (this.nameSelected !== null) {\n          formData.append('categoryName', this.nameSelected);\n        }\n        if (this.selectedImageFile) {\n          formData.append('image', this.selectedImageFile, this.selectedImageFile.name);\n        }\n        if (courseData.id === 0) {\n          this.courseService.createCourses(formData).subscribe({\n            next: x => {\n              console.log(courseData);\n              return this.onSaveComplete();\n            },\n            error: err => this.errorMessage = err\n          });\n        } else {\n          //edit with image\n          console.log(courseData.id);\n          if (this.selectedImageFile) {\n            this.courseService.updateCourseWithImg(courseData.id, formData).subscribe({\n              next: () => this.onSaveComplete(),\n              error: err => this.errorMessage = err\n            });\n          } else {\n            //edit without image\n            this.courseService.updateCourse(courseData).subscribe({\n              next: () => this.onSaveComplete(),\n              error: err => this.errorMessage = err\n            });\n          }\n        }\n      } else {\n        this.onSaveComplete();\n      }\n    } else {\n      this.errorMessage = 'Please provide valid entries.';\n    }\n  }\n  onSaveComplete() {\n    // Reset the form to clear the flags\n    this.courseForm.reset();\n    this.router.navigate(['/courses']);\n  }\n}\n_class = CourseEditComponent;\n_class.ɵfac = function CourseEditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CourseService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-component\"]],\n  viewQuery: function CourseEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(FormControlName, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formInputElements = _t);\n    }\n  },\n  decls: 65,\n  vars: 33,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\", \"mb-2\"], [\"for\", \"courseNameId\", 1, \"col-md-2\", \"col-form-label\"], [1, \"col-md-8\"], [\"id\", \"courseNameId\", \"type\", \"text\", \"placeholder\", \"Name (required)\", \"formControlName\", \"courseName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"courseCodeId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"courseCodeId\", \"type\", \"text\", \"placeholder\", \"Code (required)\", \"formControlName\", \"courseCode\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"startDateId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"startDateId\", \"type\", \"text\", \"placeholder\", \"Start Date \", \"formControlName\", \"startDate\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"priceId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"priceId\", \"type\", \"text\", \"placeholder\", \"Price \", \"formControlName\", \"price\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"starRatingId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"starRatingId\", \"type\", \"text\", \"placeholder\", \"Rating (1-5)[Required]\", \"formControlName\", \"starRating\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"imageFile\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"imageFile\", \"type\", \"file\", \"accept\", \".jpg,.jpeg,.png\", 1, \"form-control\", 3, \"ngClass\", \"change\"], [1, \"form-group\", \"row\", \"mb-4\"], [\"for\", \"categoryId\", 1, \"col-md-2\", \"col-form-label\"], [1, \"col-md-4\"], [\"id\", \"categoryId\", \"formControlName\", \"categoryId\", 1, \"form-control\", 3, \"change\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"offset-md-2\", \"col-md-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"title\", \"disabled\"], [\"type\", \"button\", \"title\", \"Cancel your edits\", 1, \"btn\", \"btn-outline-secondary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"routerLink\"], [\"type\", \"button\", \"title\", \"Delete this course\", 1, \"btn\", \"btn-outline-warning\", 2, \"width\", \"80px\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n  template: function CourseEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function CourseEditComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.saveCourse();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Course Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementStart(10, \"span\", 8);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Course Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6);\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"span\", 8);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 6);\n      i0.ɵɵelement(23, \"input\", 12);\n      i0.ɵɵelementStart(24, \"span\", 8);\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 13);\n      i0.ɵɵtext(28, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 6);\n      i0.ɵɵelement(30, \"input\", 14);\n      i0.ɵɵelementStart(31, \"span\", 8);\n      i0.ɵɵtext(32);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 4)(34, \"label\", 15);\n      i0.ɵɵtext(35, \"Star Rating (1-5)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 6);\n      i0.ɵɵelement(37, \"input\", 16);\n      i0.ɵɵelementStart(38, \"span\", 8);\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"div\", 4)(41, \"label\", 17);\n      i0.ɵɵtext(42, \"Image Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 6)(44, \"input\", 18);\n      i0.ɵɵlistener(\"change\", function CourseEditComponent_Template_input_change_44_listener($event) {\n        return ctx.onImageChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"span\", 8);\n      i0.ɵɵtext(46);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(47, \"div\", 19)(48, \"label\", 20);\n      i0.ɵɵtext(49, \"Select Category:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 21)(51, \"select\", 22);\n      i0.ɵɵlistener(\"change\", function CourseEditComponent_Template_select_change_51_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵelementStart(52, \"option\", 23);\n      i0.ɵɵtext(53, \"Select a Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(54, CourseEditComponent_option_54_Template, 2, 2, \"option\", 24);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(55, \"div\");\n      i0.ɵɵelementStart(56, \"div\", 4)(57, \"div\", 25)(58, \"button\", 26);\n      i0.ɵɵtext(59, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"button\", 27);\n      i0.ɵɵtext(61, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"button\", 28);\n      i0.ɵɵlistener(\"click\", function CourseEditComponent_Template_button_click_62_listener() {\n        return ctx.deleteCourse();\n      });\n      i0.ɵɵtext(63, \" Delete \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(64, CourseEditComponent_div_64_Template, 2, 1, \"div\", 29);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.pageTitle, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.displayMessage.courseName));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.courseName, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.displayMessage.courseCode));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.courseCode, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.displayMessage.startDate));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.startDate, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, ctx.displayMessage.price));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.price, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c0, ctx.displayMessage.starRating));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.starRating, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, ctx.displayMessage.imageUrl));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.imageUrl, \" \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"title\", ctx.courseForm.valid ? \"Save your entered data\" : \"Disabled until the form data is valid\")(\"disabled\", !ctx.courseForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(32, _c1));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});\nexport { CourseEditComponent };","map":{"version":3,"names":["ElementRef","Validators","FormControlName","fromEvent","merge","debounceTime","NumberValidators","GenericValidator","HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","category_r2","id","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","ctx_r1","errorMessage","CourseEditComponent","constructor","fb","route","router","courseService","authService","http","pageTitle","selectedImageFile","nameSelected","displayMessage","idSelected","categories","validationMessages","courseName","required","minlength","maxlength","courseCode","starRating","range","genericValidator","ngOnInit","fetchCategories","courseForm","group","minLength","maxLength","startDate","price","imageUrl","categoryId","sub","paramMap","subscribe","params","Number","snapshot","get","getCourse","ngOnDestroy","unsubscribe","ngAfterViewInit","controlBlurs","formInputElements","map","formControl","nativeElement","valueChanges","pipe","value","processMessages","console","log","next","Course","displayCourse","error","err","reset","patchValue","category","deleteCourse","onSaveComplete","confirm","onImageChange","event","file","target","files","token","getToken","headers","set","data","onChange","find","saveCourse","valid","dirty","courseData","formData","FormData","append","createCourses","x","updateCourseWithImg","updateCourse","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","CourseService","i4","AuthService","i5","HttpClient","selectors","viewQuery","CourseEditComponent_Query","rf","ctx","ɵɵlistener","CourseEditComponent_Template_form_ngSubmit_4_listener","ɵɵelement","CourseEditComponent_Template_input_change_44_listener","$event","CourseEditComponent_Template_select_change_51_listener","ɵɵtemplate","CourseEditComponent_option_54_Template","CourseEditComponent_Template_button_click_62_listener","CourseEditComponent_div_64_Template","ɵɵpureFunction1","_c0","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\LENOVO\\P10\\demo\\src\\app\\courses\\course-edit.component.ts","C:\\Users\\LENOVO\\P10\\demo\\src\\app\\courses\\course-edit.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { course } from './course';\r\nimport { CourseService } from './course.service';\r\n\r\nimport { NumberValidators } from '../shared/number.validator';\r\nimport { GenericValidator } from '../shared/generic-validator';\r\n\r\nimport { AuthService } from '../auth.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  templateUrl: './course-edit.component.html'\r\n})\r\nexport class CourseEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements!: ElementRef[];\r\n\r\n  pageTitle = 'Course Edit';\r\n  errorMessage = '';\r\n  courseForm!: FormGroup;\r\n\r\n  Course!: course;\r\n  private sub!: Subscription;\r\n\r\n  selectedImageFile: File |null=null;\r\n  nameSelected: string | null = null;\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n  \r\n\r\n  \r\n\r\n  constructor(private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private courseService: CourseService,\r\n              private authService:AuthService,\r\n              private http:HttpClient) {\r\n\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      courseName: {\r\n        required: 'Course name is required.',\r\n        minlength: 'Course name must be at least three characters.',\r\n        maxlength: 'Course name cannot exceed 50 characters.'\r\n      },\r\n      courseCode: {\r\n        required: 'Course code is required.'\r\n      },\r\n      // startDate:{ required: 'Start Date is required.'},\r\n      // price:{ required: 'Price is required.'},\r\n    \r\n\r\n      starRating: {\r\n     range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n       }\r\n      //  imageUrl: {\r\n      //   range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      //     },\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.fetchCategories();\r\n    this.courseForm = this.fb.group({\r\n      courseName: ['', [Validators.required,\r\n                         Validators.minLength(3),\r\n                         Validators.maxLength(50)]],\r\n      courseCode: ['', Validators.required],\r\n      startDate: [''],\r\n      price:'',\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n       imageUrl: [''],\r\n       categoryId:[null]\r\n      // tags: this.fb.array([]),\r\n      // description: ''\r\n    });\r\n\r\n    // Read the product Id from the route parameter\r\n    this.sub = this.route.paramMap.subscribe(\r\n      params => {\r\n        const id = Number(this.route.snapshot.paramMap.get('id'));\r\n        this.getCourse(id);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements\r\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.courseForm.valueChanges, ...controlBlurs).pipe(\r\n      debounceTime(800)\r\n    ).subscribe(value => {\r\n      this.displayMessage = this.genericValidator.processMessages(this.courseForm);\r\n    });\r\n  }\r\n\r\n\r\n  getCourse(id: number): void {\r\n    console.log(id)\r\n    this.courseService.getCourse(id)\r\n      .subscribe({\r\n        next: (Course: course) => this.displayCourse(Course),\r\n        error: err => this.errorMessage = err\r\n      });\r\n  }\r\n\r\n  displayCourse(Course: course): void {\r\n    if (this.courseForm) {\r\n      this.courseForm.reset();\r\n    }\r\n    this.Course = Course;\r\n\r\n    if (this.Course.id === 0) {\r\n      this.pageTitle = 'Add Course';\r\n    } else {\r\n      this.pageTitle = `Edit Course: ${this.Course.courseName}`;\r\n    }\r\n\r\n    // Update the data on the form\r\n    this.courseForm.patchValue({\r\n      courseName: this.Course.courseName,\r\n      courseCode: this.Course.courseCode,\r\n       starRating: this.Course.starRating,\r\n       startDate: this.Course.startDate,\r\n      price: this.Course.price,\r\n      category: this.Course.category,\r\n      imageUrl: this.Course.imageUrl,\r\n    });\r\n  \r\n  }\r\n\r\n  deleteCourse(): void {\r\n    if (this.Course.id === 0) {\r\n      // Don't delete, it was never saved.\r\n      this.onSaveComplete();\r\n    } else if (this.Course.id) {\r\n      if (confirm(`Are you sure you want to delete the course, ${this.Course.courseName}?`)) {\r\n        this.courseService.deleteCourse(this.Course.id)\r\n          .subscribe({\r\n            next: () => this.onSaveComplete(),\r\n            error: err => this.errorMessage = err\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  // saveCourse(): void {\r\n  //   if (this.courseForm.valid) {\r\n  //     if (this.courseForm.dirty) {\r\n  //       const p = { ...this.Course, ...this.courseForm.value };\r\n\r\n  //       if (p.id === 0) {\r\n  //         this.courseService.createCourses(p)\r\n  //           .subscribe({\r\n  //             next: x => {\r\n  //               console.log(x);\r\n  //               return this.onSaveComplete();\r\n  //             },\r\n  //             error: err => this.errorMessage = err\r\n  //           });\r\n  //       } else {\r\n  //         this.courseService.updateCourse(p)\r\n  //           .subscribe({\r\n  //             next: () => this.onSaveComplete(),\r\n  //             error: err => this.errorMessage = err\r\n  //           });\r\n  //       }\r\n  //     } else {\r\n  //       this.onSaveComplete();\r\n  //     }\r\n  //   } else {\r\n  //     this.errorMessage = 'Please correct the validation errors.';\r\n  //   }\r\n  // }\r\n  onImageChange(event:any):void{\r\n    const file=event.target.files[0];\r\n    this.selectedImageFile=file;\r\n  }\r\n\r\n  \r\n  idSelected: number | null = null;\r\n  categories: any[] = []; \r\n\r\n  fetchCategories(): void {\r\n    const token = this.authService.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    this.http.get('http://127.0.0.1:8000/api/category', { headers }).subscribe((data: any) => {\r\n      this.categories = data;\r\n    });\r\n  }\r\n  onChange(event: any): void {\r\n    const idSelected = event.target.value;\r\n    this.nameSelected = this.categories.find(category => category.id === idSelected)?.name;\r\n  }\r\n  saveCourse():void{\r\n    if(this.courseForm.valid){\r\n      if(this.courseForm.dirty){\r\n        const courseData={...this.Course,...this.courseForm.value};\r\n        this.idSelected=courseData.categoryId;\r\n        this.nameSelected=this.categories.find(category=>category.id===this.idSelected)?.name;\r\n        console.log('Selected Image File:',this.selectedImageFile);\r\n        console.log('Selected Image name:',this.selectedImageFile?.name);\r\n        const formData=new FormData;\r\n        formData.append('courseName',courseData.courseName);\r\n        formData.append('courseCode',courseData.courseCode);\r\n        formData.append('startDate',courseData.startDate);\r\n        formData.append('price',courseData.price);\r\n        formData.append('starRating',courseData.starRating);\r\n\r\n        if(this.nameSelected!==null){\r\n          formData.append('categoryName',this.nameSelected);\r\n        }\r\n\r\n        if(this.selectedImageFile){\r\n          formData.append('image',this.selectedImageFile,this.selectedImageFile.name);\r\n        }\r\n          if (courseData.id === 0) {\r\n              this.courseService.createCourses(formData)\r\n                .subscribe({\r\n                  next: x => {\r\n                    console.log(courseData);\r\n                    return this.onSaveComplete();\r\n                    },\r\n                    error: err => this.errorMessage = err\r\n                  });\r\n                }else{\r\n                  //edit with image\r\n                  console.log(courseData.id);\r\n                  if(this.selectedImageFile){\r\n                    this.courseService.updateCourseWithImg(courseData.id,formData)\r\n                    .subscribe({\r\n                      next:()=>this.onSaveComplete(),\r\n                      error:err=>this.errorMessage=err\r\n                    });\r\n                  }else{\r\n                    //edit without image\r\n                    this.courseService.updateCourse(courseData)\r\n                    .subscribe({\r\n                      next: ()=>this.onSaveComplete(),\r\n                      error:err=>this.errorMessage=err\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              else{\r\n                this.onSaveComplete();\r\n              }\r\n      \r\n    } else{\r\n        this.errorMessage='Please provide valid entries.'\r\n      }\r\n    }\r\n  \r\n\r\n  onSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.courseForm.reset();\r\n    this.router.navigate(['/courses']);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    {{pageTitle}}\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <form novalidate\r\n          (ngSubmit)=\"saveCourse()\"\r\n          [formGroup]=\"courseForm\" autocomplete=\"off\" >\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"courseNameId\">Course Name</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"courseNameId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Name (required)\"\r\n                 formControlName=\"courseName\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.courseName }\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.courseName}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"courseCodeId\">Course Code</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"courseCodeId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Code (required)\"\r\n                 formControlName=\"courseCode\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.courseCode}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.courseCode}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"startDateId\">Start Date</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"startDateId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Start Date \"\r\n                 formControlName=\"startDate\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.startDate}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.startDate}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"priceId\">Price</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"priceId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Price \"\r\n                 formControlName=\"price\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.price}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.price}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"starRatingId\">Star Rating (1-5)</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"starRatingId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Rating (1-5)[Required]\"\r\n                 formControlName=\"starRating\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.starRating}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.starRating}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n       \r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"imageFile\">Image Upload</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"imageFile\"\r\n                 type=\"file\"\r\n                 (change)=\"onImageChange($event)\"\r\n                 accept=\".jpg,.jpeg,.png\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.imageUrl}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.imageUrl}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div formArrayName=\"tags\">\r\n        <div class=\"form-group row mb-2\"\r\n             *ngFor=\"let tag of tags.controls; let i=index\">\r\n          <label class=\"col-md-2 col-form-label\"\r\n                 [attr.for]=\"i\">Tag</label>\r\n\r\n          <div class=\"col-md-8\">\r\n            <input class=\"form-control\"\r\n                   [id]=\"i\"\r\n                   type=\"text\"\r\n                   placeholder=\"Tag\"\r\n                   [formControlName]=\"i\" />\r\n          </div>\r\n          <button class=\"col-md-1 btn btn-outline-warning btn-sm\"\r\n                  type=\"button\"\r\n                  title=\"Delete this search tag\"\r\n                  (click)=\"deleteTag(i)\">Delete Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2 mb-2\">\r\n          <button class=\"btn btn-outline-secondary btn-sm\"\r\n                  type=\"button\"\r\n                  title=\"Add a search tag\"\r\n                  (click)=\"addTag()\">Add Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"descriptionId\">Description</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <textarea class=\"form-control\"\r\n                    id=\"descriptionId\"\r\n                    placeholder=\"Description\"\r\n                    rows=3\r\n                    formControlName=\"description\"\r\n                    [ngClass]=\"{'is-invalid': displayMessage.description}\"></textarea>\r\n          <span class=\"invalid-feedback\">\r\n            {# {{ displayMessage.description}} #}\r\n          </span>\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"form-group row mb-4\">\r\n        <label class=\"col-md-2 col-form-label\" for=\"categoryId\">Select Category:</label>\r\n        <div class=\"col-md-4\">\r\n        <select class=\"form-control\" id=\"categoryId\" formControlName=\"categoryId\" (change)=\"onChange($event)\">\r\n          <option [ngValue]=\"null\">Select a Category</option>\r\n          <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">{{ category.name }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div></div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <div class=\"offset-md-2 col-md-4\">\r\n          <button class=\"btn btn-primary mr-3\"\r\n                  style=\"width:80px;\"\r\n                  type=\"submit\"\r\n                  [title]=\"courseForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                  [disabled]=\"!courseForm.valid\">\r\n            Save\r\n          </button>\r\n          <button class=\"btn btn-outline-secondary mr-3\"\r\n                  style=\"width:80px;\"\r\n                  type=\"button\"\r\n                  title=\"Cancel your edits\"\r\n                  [routerLink]=\"['/courses']\">\r\n            Cancel\r\n          </button>\r\n          <button class=\"btn btn-outline-warning\"\r\n                  style=\"width:80px\"\r\n                  type=\"button\"\r\n                  title=\"Delete this course\"\r\n                  (click)=\"deleteCourse()\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"alert alert-danger\"\r\n       *ngIf=\"errorMessage\">{{errorMessage}}\r\n  </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}