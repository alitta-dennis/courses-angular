{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CourseListComponent = class CourseListComponent {\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    this.filteredCourses = this.listFilter ? this.performFilter(this.listFilter) : this.courses;\n  }\n  constructor(courseService, router, http, authService) {\n    this.courseService = courseService;\n    this.router = router;\n    this.http = http;\n    this.authService = authService;\n    this.pageTitle = 'Course List';\n    this.imageWidth = 50;\n    this.imageMargin = 2;\n    this.showImage = false;\n    this.errorMessage = '';\n    this._listFilter = '';\n    this.filteredCourses = [];\n    this.courses = [];\n  }\n  fetchImage(imageUrl) {\n    this.http.get(imageUrl, {\n      responseType: 'blob'\n    }).subscribe(response => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // Assuming you have an image element in your template with an ID \"productImage\"\n        const imageElement = document.getElementById('image');\n        imageElement.src = reader.result;\n      };\n      reader.readAsDataURL(response);\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.courses.filter(Course => Course.courseName.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n  // Checks both the product name and tags\n  // performFilter2(filterBy: string): course[] {\n  //   filterBy = filterBy.toLocaleLowerCase();\n  //   return this.courses.filter((Course: course) =>\n  //     Course.courseName.toLocaleLowerCase().indexOf(filterBy) !== -1 ||\n  //       (Course.tags && Course.tags.some(tag => tag.toLocaleLowerCase().indexOf(filterBy) !== -1)));\n  // }\n  toggleImage() {\n    this.showImage = !this.showImage;\n  }\n  ngOnInit() {\n    this.courseService.getCourses().subscribe({\n      next: courses => {\n        this.courses = courses;\n        this.filteredCourses = this.courses;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n  isAdmin() {\n    return this.authService.isAdmin();\n  }\n};\nCourseListComponent = __decorate([Component({\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})], CourseListComponent);\nexport { CourseListComponent };","map":{"version":3,"names":["Component","CourseListComponent","listFilter","_listFilter","value","filteredCourses","performFilter","courses","constructor","courseService","router","http","authService","pageTitle","imageWidth","imageMargin","showImage","errorMessage","fetchImage","imageUrl","get","responseType","subscribe","response","reader","FileReader","onloadend","imageElement","document","getElementById","src","result","readAsDataURL","filterBy","toLocaleLowerCase","filter","Course","courseName","indexOf","toggleImage","ngOnInit","getCourses","next","error","err","isAdmin","__decorate","templateUrl","styleUrls"],"sources":["C:\\Users\\LENOVO\\P10\\demo\\src\\app\\courses\\course-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { course } from './course';\r\nimport { CourseService } from './course.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './course-list.component.html',\r\n  styleUrls: ['./course-list.component.css']\r\n})\r\nexport class CourseListComponent implements OnInit {\r\n  pageTitle = 'Course List';\r\n  imageWidth = 50;\r\n  imageMargin = 2;\r\n  showImage = false;\r\n  errorMessage = '';\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.filteredCourses = this.listFilter ? this.performFilter(this.listFilter) : this.courses;\r\n  }\r\n\r\n  filteredCourses: course[] = [];\r\n  courses: course[] = [];\r\n\r\n  \r\n\r\n  constructor(private courseService: CourseService, private router: Router, private http:HttpClient, private authService:AuthService) { }\r\n\r\n  fetchImage(imageUrl: string): void {\r\n    this.http.get(imageUrl, { responseType: 'blob' }).subscribe(response => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        // Assuming you have an image element in your template with an ID \"productImage\"\r\n        const imageElement = document.getElementById('image') as HTMLImageElement;\r\n        imageElement.src = reader.result as string;\r\n      };\r\n      reader.readAsDataURL(response);\r\n    });\r\n  }\r\n\r\n\r\n  performFilter(filterBy: string): course[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.courses.filter((Course: course) =>\r\n      Course.courseName.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  // Checks both the product name and tags\r\n  // performFilter2(filterBy: string): course[] {\r\n  //   filterBy = filterBy.toLocaleLowerCase();\r\n  //   return this.courses.filter((Course: course) =>\r\n  //     Course.courseName.toLocaleLowerCase().indexOf(filterBy) !== -1 ||\r\n  //       (Course.tags && Course.tags.some(tag => tag.toLocaleLowerCase().indexOf(filterBy) !== -1)));\r\n  // }\r\n\r\n  toggleImage(): void {\r\n    this.showImage = !this.showImage;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.courseService.getCourses().subscribe({\r\n      next: courses => {\r\n        this.courses = courses;\r\n        this.filteredCourses = this.courses;\r\n      },\r\n      error: err => this.errorMessage = err\r\n    });\r\n  }\r\n\r\n  isAdmin():boolean\r\n  {\r\n    return this.authService.isAdmin();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAYjD,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAQ9B,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACC,WAAW;EACzB;EACA,IAAID,UAAUA,CAACE,KAAa;IAC1B,IAAI,CAACD,WAAW,GAAGC,KAAK;IACxB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,UAAU,GAAG,IAAI,CAACI,aAAa,CAAC,IAAI,CAACJ,UAAU,CAAC,GAAG,IAAI,CAACK,OAAO;EAC7F;EAOAC,YAAoBC,aAA4B,EAAUC,MAAc,EAAUC,IAAe,EAAUC,WAAuB;IAA9G,KAAAH,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,WAAW,GAAXA,WAAW;IApBtH,KAAAC,SAAS,GAAG,aAAa;IACzB,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,YAAY,GAAG,EAAE;IAEjB,KAAAd,WAAW,GAAG,EAAE;IAShB,KAAAE,eAAe,GAAa,EAAE;IAC9B,KAAAE,OAAO,GAAa,EAAE;EAIgH;EAEtIW,UAAUA,CAACC,QAAgB;IACzB,IAAI,CAACR,IAAI,CAACS,GAAG,CAACD,QAAQ,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrE,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAK;QACtB;QACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAqB;QACzEF,YAAY,CAACG,GAAG,GAAGN,MAAM,CAACO,MAAgB;MAC5C,CAAC;MACDP,MAAM,CAACQ,aAAa,CAACT,QAAQ,CAAC;IAChC,CAAC,CAAC;EACJ;EAGAjB,aAAaA,CAAC2B,QAAgB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAAC3B,OAAO,CAAC4B,MAAM,CAAEC,MAAc,IACxCA,MAAM,CAACC,UAAU,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAM,WAAWA,CAAA;IACT,IAAI,CAACvB,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAClC;EAEAwB,QAAQA,CAAA;IACN,IAAI,CAAC/B,aAAa,CAACgC,UAAU,EAAE,CAACnB,SAAS,CAAC;MACxCoB,IAAI,EAAEnC,OAAO,IAAG;QACd,IAAI,CAACA,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACF,eAAe,GAAG,IAAI,CAACE,OAAO;MACrC,CAAC;MACDoC,KAAK,EAAEC,GAAG,IAAI,IAAI,CAAC3B,YAAY,GAAG2B;KACnC,CAAC;EACJ;EAEAC,OAAOA,CAAA;IAEL,OAAO,IAAI,CAACjC,WAAW,CAACiC,OAAO,EAAE;EACnC;CACD;AApEY5C,mBAAmB,GAAA6C,UAAA,EAJ/B9C,SAAS,CAAC;EACT+C,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACW/C,mBAAmB,CAoE/B;SApEYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}